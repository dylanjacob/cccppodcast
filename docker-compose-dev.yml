version: "3.0"

services:
    # rsspy:
    #     build:
    #         context: ./services/rsspy
    #         dockerfile: Dockerfile-dev
    #     volumes:
    #         - './services/rsspy:/usr/src/app'
    #     ports:
    #         - 5001:5000
    #     networks:
    #         - app
    #         - rssdb
    #     environment:
    #         - FLASK_ENV=development
    #         - APP_SETTINGS=lib.config.DevelopmentConfig
    #         - DATABASE_URL=postgres://postgres:postgres@episodes-db:5432/episodes_dev
    #         - DATABASE_TEST_URL=postgres://postgres:postgres@episodes-db:5432/episodes_test
    #     depends_on:
    #         - episodes-db

    # episodes-db:
    #     build:
    #         context: ./services/rsspy/lib/db
    #         dockerfile: Dockerfile
    #     ports:
    #         - 5436:5432
    #     networks:
    #         - rssdb
    #     environment:
    #         - POSTGRES_USER=postgres
    #         - POSTGRES_PASSWORD=postgres

    users:
        build:
            context: ./services/users
            dockerfile: Dockerfile-dev
        volumes:
            - './services/users:/usr/src/app'
        ports:
            - 5001:5000
        networks:
            - users
            - users-db
        environment:
            - FLASK_ENV=development
            - APP_SETTINGS=project.config.DevelopmentConfig
            - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
            - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
            - SECRET_KEY=my_precious
        depends_on:
            - users-db

    users-db:
        build:
            context: ./services/users/project/db
            dockerfile: Dockerfile
        expose:
            - 5432
        networks:
            - users-db
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres

    client:
        build:
            context: ./services/client
            dockerfile: Dockerfile-dev
        volumes:
            - './services/client:/usr/src/app'
            - '/usr/src/app/node_modules'
        ports:
            - 3007:3000
        environment:
            - NODE_ENV=development
            - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
        depends_on:
            - users
        networks:
            - client

    nginx:
        build: 
            context: ./services/nginx
            dockerfile: Dockerfile-dev
        ports:
            - 80:80
            - 443:443
        restart: always
        depends_on:
            - users
            - client
        networks:
            - users
            - client

networks:
    app:
    server: 
    rssdb:
    users-db:
    users:
    client: